/* tslint:disable */
/* eslint-disable */
/**
 * MINT Data Catalog
 * API Documentation for MINT Data Catalog
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: danf@usc.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Resource
 */
export interface Resource {
    /**
     * Unique identifier
     * @type {string}
     * @memberof Resource
     */
    recordId: string;
    /**
     * record_id of the dataset that this resource belongs to
     * @type {string}
     * @memberof Resource
     */
    datasetId: string;
    /**
     * record_id of the entitity that created this resource
     * @type {string}
     * @memberof Resource
     */
    provenanceId: string;
    /**
     * Display name/title of the resource
     * @type {string}
     * @memberof Resource
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    resourceType: ResourceResourceTypeEnum;
    /**
     * direct download url for this resource
     * @type {string}
     * @memberof Resource
     */
    dataUrl: string;
    /**
     * 
     * @type {object}
     * @memberof Resource
     */
    metadata?: object;
}

export function ResourceFromJSON(json: any): Resource {
    return ResourceFromJSONTyped(json, false);
}

export function ResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Resource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recordId': json['record_id'],
        'datasetId': json['dataset_id'],
        'provenanceId': json['provenance_id'],
        'name': json['name'],
        'resourceType': json['resource_type'],
        'dataUrl': json['data_url'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function ResourceToJSON(value?: Resource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'record_id': value.recordId,
        'dataset_id': value.datasetId,
        'provenance_id': value.provenanceId,
        'name': value.name,
        'resource_type': value.resourceType,
        'data_url': value.dataUrl,
        'metadata': value.metadata,
    };
}

/**
* @export
* @enum {string}
*/
export enum ResourceResourceTypeEnum {
    GeoJSON = 'GeoJSON',
    NetCDF = 'NetCDF',
    CSV = 'CSV',
    GeoTIFF = 'GeoTIFF',
    JSON = 'JSON',
    SHP = 'SHP',
    TXT = 'TXT',
    WriteInYourOwn = '<Write-in your own>'
}


