/* tslint:disable */
/* eslint-disable */
/**
 * MINT Data Catalog
 * API Documentation for MINT Data Catalog
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: danf@usc.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineResponse2007Dataset
 */
export interface InlineResponse2007Dataset {
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2007Dataset
     */
    standardVariableId?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2007Dataset
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2007Dataset
     */
    ontology?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2007Dataset
     */
    uri?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2007Dataset
     */
    description?: string;
}

export function InlineResponse2007DatasetFromJSON(json: any): InlineResponse2007Dataset {
    return InlineResponse2007DatasetFromJSONTyped(json, false);
}

export function InlineResponse2007DatasetFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse2007Dataset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'standardVariableId': !exists(json, 'standard_variable_id') ? undefined : json['standard_variable_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'ontology': !exists(json, 'ontology') ? undefined : json['ontology'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function InlineResponse2007DatasetToJSON(value?: InlineResponse2007Dataset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'standard_variable_id': value.standardVariableId,
        'name': value.name,
        'ontology': value.ontology,
        'uri': value.uri,
        'description': value.description,
    };
}


